Ansible Configuration management with Dynamic Inventory 
Steps:
1.	Spin up your servers (ubuntu - ami)
2.	Tag one of them Master and the rest Client as Name (All servers must have same security group and keypair)
3.	Secure copy the keypair to /home/ubuntu of the Master node (scp -i <keypair> <keypair>) ubuntu@Public-Ip-of-master-node:/home/ubuntu
4.	ssh into Master node (i.e ssh -i "keypair" ubuntu@Pblic-Ip-or-Public-DNS)
5.	Navigate to /etc/ansible/
6.	Make a copy of ansible_cfg file (sudo cp ansible_cfg ansible_cfg.bk)
7.  sudo vi ansible_cfg (to edit the file)
8.	Uncomment these 2 entries: 1. sudo_user=root and host_key_checking = False (remove ## or #)
9.	Run cd ~ (to return /home/ubuntu. If you launched centos ami, replace ubuntu with centos, if Linux-ami, then ec2-user)
10.	To install ansible and the dependencies, run the following commands in sequence @/home/ubuntu prompt: {
	sudo apt update -y
	sudo apt install -y ansible
	sudo apt install python-is-python3
	sudo apt-get install python3-pip -y
	pip3 install boto
	pip3 install boto3
	pip3 install awscli
	}

11	sudo chmod 400 <keypair> (to run read read permission on your keypair)
12	sudo chown ubuntu:ubuntu keypair (to change keypair's ownership and group to ubuntu	)
13	To allow for authentication into your aws account, export your security credentials with the following commands:

	export AWS_ACCESS_KEY_ID=<Access-key>
	export AWS_SECRET_ACCESS_KEY=<Secret-Access-key>

14.	Download ec2.py and ec2.ini with the following commands:
	aws s3 cp s3://code-sharing-bucket/jespo/ansible/ec2.py .
	aws s3 cp s3://code-sharing-bucket/jespo/ansible/ec2.ini .
	
15.	Run execution permission on the 2 files with 
	sudo chmod +x ec2.*
16.	Next i sgenerate is public key and add it with these commands:
	ssh-agent bash
	ssh-add /home/ubuntu/always-orhie.pem
17.	Run the following commands to export ec2.ini and ec2.py:
	export EC2_INI_PATH=/home/ubuntu/ec2.ini
	export ANSIBLE_HOSTS=/home/ubuntu/ec2.py
18.	Do dynamic client discovery with :
	export EC2_INSTANCE_FILTERS='tag:Name=Client*'
19.	Display host inventory file with: ./ec2.py
	This will display all clients with tag name starting with the word Client
20.	You can then issue any of the following commands:
	ansible -m file -b -a "path=/home/ubuntu/demo2.txt state=touch" -i ec2.py ec2 (this is the command that will replicate the addition of hosts to inventory dynamically)
	ansible -m user -b -a "name=user1 state=present" -i ec2.py ec2
	ansible -m apt -b -a "name=* state=latest" -i ec2.py ec2
	ansible -m file -b -a "path=/home/ubuntu/demo2.txt state=touch" -i ec2.py ec2
	ansible -m copy -b -a "src=/home/ubuntu/test1 dest=/home/ubuntu" -i ec2.py ec2
	ansible -m user -b -a "name=user1 state=present" -i ec2.py ec2
	ansible -m user -b -a "name=group1" -i ec2.py ec2
	ansible -m user -b -a "name=user1 group=group1" -i ec2.py ec2
	ansible -m user -b -a "name=ntp state=absent" -i ec2.py ec2
	ansible -m user -b -a "name=httpd state=absent" -i ec2.py ec2
}

You may want to read up: ttps://aws.amazon.com/blogs/apn/getting-started-with-ansible-and-dynamic-amazon-ec2-inventory-management/